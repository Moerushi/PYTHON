list_1 = [] # Создание пустого списка
list_2 = list() # Создание пустого списка
list_1 = [7, 9, 11, 13, 15, 17] # Создание заполненного списка
list_1 = [7, 9, 11, 13, 15, 17]
print(list_1[0]) # вывод в консоль элемента с 0 индексом, т.е. 7
print(len(list_1)) # получение кол-ва элементов списка
list_1.append(5) # добавление эначения "5" в конец списка
print(list_1.pop()) # удаляет последний элемент из списка и возвращает его, например, в переменную
print(list_1.pop(0)) # удаление элемента с индектом 0 из списка
print(list_1.insert(2, 11)) # доавление значения 11 в позицию 2 в списке

# срезы массива
list_3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(list_1[0]) # выбор элемента с индексом 0
print(list_1[1]) # выбор элемента с индексом 1
print(list_1[len(list_1)-1]) # выбор элемента с индексом длина -1
print(list_1[-5]) # выбор элемента с индексом -5 с конца списка
print(list_1[:]) # выбор всех элементов списка
print(list_1[:2]) # выбор 2 элементов с начала списка
print(list_1[len(list_1)-2:]) # выбор 2 элементов с конца списка
print(list_1[2:9]) # выбор элементов со 2 по 9 индекс списка
print(list_1[6:-18]) # выбор элементов с 6 по -18 индекс списка
print(list_1[0:len(list_1):6]) # выбор элемента с индексом 0 и 6
print(list_1[::6]) # выбор элемента с индексом 0 и 6

t = () # создание пустого кортежа
print(type(t)) # class <'tuple'>
t = tuple(['red', 'green', 'blue'])
red, green, blue = t
print('r:{} g:{} b:{}'.format(red, green, blue)) # r:red g:green b:blue распаковка в независимые переменные

dictionary = {} # создание словаря
dictionary ={'up': '↑', 'left': '←', 'down': '↓', 'right': '→'} # ключ: значение
del dictionary['left'] # удаление элемента
for item in dictionary: # for (k,v) in dictionary.items():
    print('{}: {}'.format(item, dictionary[item])) # печать словаря

colors = {'red', 'green', 'blue'} # создание множества
colors.add('gray') # добавление элемента
colors.remove('red') # удаление из множества
colors.clear() # очистка всего множества
colors.discard('red') # удаляет элемент из множества , если его значение присутствует в множестве
a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21}
c = a.copy() # копирование элементов
u = a.union(b) # объединение элементов
i = a.intersection(b) # нахождение пересекающихся элементов
dl = a.difference(b) # нахождение непересекающихся элементов
dr = b.difference(a) # нахождение непересекающихся элементов
q=a.union(b).difference(a.intersection(b)) # сложное действие

d = {1, 2, 3, 5, 8}
e = frozenset(d) # Неизменяемое или замороженное множество(frozenset) — множество, с которым не будут работать методы удаления и добавления.
print(e) # frozenset({1, 2, 3, 5, 8})

# Типичные ошибки в коде:
# SyntaxError(Синтаксическая ошибка)
# IndentationError(Ошибка отступов)
# TypeError(Типовая ошибка)
# ZeroDivisionError(Деление на 0)
# KeyError(Ошибка ключа)
# NameError(Ошибка имени переменной)
# ValueError(Ошибка значения)